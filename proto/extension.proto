syntax = "proto3";
package extension;

option go_package = "github.com/kwil-io/core/proto/extension";

service ExtensionService {
    // Configure is called to give the extension variables necessary to run.
    // Ex: An Eth RPC extension would need the URL of the RPC server.
    rpc Configure(ConfigureRequest) returns (ConfigureResponse) {}

    // ListMethods is used to list the methods which the extension provides.
    rpc ListMethods(ListMethodsRequest) returns (ListMethodsResponse) {}

    // Execute is used to execute a method provided by the extension.
    rpc Execute(ExecuteRequest) returns (ExecuteResponse) {}

    // GetMetadata is used to get required metadata.
    rpc GetMetadata(GetMetadataRequest) returns (GetMetadataResponse) {}
}

message ConfigureRequest {
    map<string, string> config = 1; // maps the name to the value
}

message ConfigureResponse {
    bool success = 1;
}

message ListMethodsRequest {
}

message ListMethodsResponse {
    repeated Method methods = 1;
}

message Method {
    string name = 1;
    repeated string required_inputs = 2; // array of the required inputs and their types
}

message ExecuteRequest {
    string name = 1;
    repeated ScalarValue args = 2;
    map<string, string> metadata = 3; // maps the name to the value
}

message ExecuteResponse {
    repeated ScalarValue outputs = 1;
}

message GetMetadataRequest {
}

message GetMetadataResponse {
    map<string, string> required_metadata = 1; // maps the name to the default value
}

// ScalarValue is used to represent a scalar value.
// It only supports types supported by Kwil
message ScalarValue {
    string type = 1;
    bytes value = 2;
}